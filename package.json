{
  "name": "whisperdictation",
  "displayName": "WhisperDictation",
  "description": "Add Whisper Speech to Text typing to VSCode",
  "version": "0.2.0",
  "publisher": "local-publisher",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/PeterRoschke/WhisperDictation.git"
  },
  "engines": {
    "vscode": "^1.75.0"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "categories": [
    "Other"
  ],
  "main": "./dist/extension.js",
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": true,
      "description": "This extension requires microphone access for audio recording."
    },
    "virtualWorkspaces": true
  },
  "enabledApiProposals": [],
  "contributes": {
    "commands": [
      {
        "command": "whisperdictation.toggleDictation",
        "title": "Toggle Dictation"
      },
      {
        "command": "whisperdictation.startDictation",
        "title": "Start Dictation"
      },
      {
        "command": "whisperdictation.stopDictation",
        "title": "Stop Dictation"
      },
      {
        "command": "whisperdictation.openSettings",
        "title": "Whisper Dictation: Open Settings"
      },
      {
        "command": "whisperdictation.updateApiKey",
        "title": "Whisper Dictation: Update OpenAI API Key",
        "category": "Whisper Dictation"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Whisper Dictation",
      "properties": {
        "whisperdictation.language": {
          "type": "string",
          "default": "en",
          "enum": [
            "",
            "af",
            "ar",
            "hy",
            "az",
            "be",
            "bs",
            "bg",
            "ca",
            "zh",
            "hr",
            "cs",
            "da",
            "nl",
            "en",
            "et",
            "fi",
            "fr",
            "gl",
            "de",
            "el",
            "he",
            "hi",
            "hu",
            "is",
            "id",
            "it",
            "ja",
            "kn",
            "kk",
            "ko",
            "lv",
            "lt",
            "mk",
            "ms",
            "mr",
            "mi",
            "ne",
            "no",
            "fa",
            "pl",
            "pt",
            "ro",
            "ru",
            "sr",
            "sk",
            "sl",
            "es",
            "sw",
            "sv",
            "tl",
            "ta",
            "th",
            "tr",
            "uk",
            "ur",
            "vi",
            "cy"
          ],
          "enumDescriptions": [
            "Automatic",
            "Afrikaans",
            "Arabic",
            "Armenian",
            "Azerbaijani",
            "Belarusian",
            "Bosnian",
            "Bulgarian",
            "Catalan",
            "Chinese",
            "Croatian",
            "Czech",
            "Danish",
            "Dutch",
            "English",
            "Estonian",
            "Finnish",
            "French",
            "Galician",
            "German",
            "Greek",
            "Hebrew",
            "Hindi",
            "Hungarian",
            "Icelandic",
            "Indonesian",
            "Italian",
            "Japanese",
            "Kannada",
            "Kazakh",
            "Korean",
            "Latvian",
            "Lithuanian",
            "Macedonian",
            "Malay",
            "Marathi",
            "Maori",
            "Nepali",
            "Norwegian",
            "Persian",
            "Polish",
            "Portuguese",
            "Romanian",
            "Russian",
            "Serbian",
            "Slovak",
            "Slovenian",
            "Spanish",
            "Swahili",
            "Swedish",
            "Tagalog",
            "Tamil",
            "Thai",
            "Turkish",
            "Ukrainian",
            "Urdu",
            "Vietnamese",
            "Welsh"
          ],
          "description": "Language code for transcription",
          "order": 2
        },
        "whisperdictation.saveDebugFiles": {
          "type": "boolean",
          "default": false,
          "description": "Save audio recordings and transcriptions to the application data directory for debugging purposes",
          "order": 4
        },
        "whisperdictation.transcriptionModel": {
          "type": "string",
          "default": "gpt-4o-mini-transcribe",
          "enum": [
            "whisper-1",
            "gpt-4o-transcribe",
            "gpt-4o-mini-transcribe"
          ],
          "enumDescriptions": [
            "OpenAI's original general-purpose speech-to-text model ($0.006/minute)",
            "Latest highly accurate transcription model from GPT-4o family ($0.0025/minute)",
            "Faster and cost-effective transcription model from GPT-4o family ($0.00075/minute)"
          ],
          "description": "Select the OpenAI transcription model to use. Pricing shown is per minute of audio.",
          "markdownDescription": "Select the OpenAI transcription model to use:\n\n- **whisper-1**: Original model ($0.006/minute)\n- **gpt-4o-transcribe**: High accuracy ($0.0025/minute)\n- **gpt-4o-mini-transcribe**: Fast & cost-effective ($0.00075/minute)",
          "order": 1
        },
        "whisperdictation.useSystemPrompts": {
          "type": "boolean",
          "default": true,
          "description": "Enable system prompts to improve transcription accuracy for development environments. Helps with technical terms and code-related discussions.",
          "markdownDescription": "Enable system prompts to improve transcription accuracy for development environments.\n\nWhen enabled, the extension provides context-aware prompts to the transcription models to:\n- Better recognize technical terms and programming concepts\n- Improve accuracy for code-related discussions\n- Ensure clean transcription output without extra commentary",
          "order": 3
        }
      }
    },
    "keybindings": [
      {
        "command": "whisperdictation.toggleDictation",
        "key": "ctrl+insert",
        "mac": "cmd+insert",
        "when": "true"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production --devtool hidden-source-map",
    "compile": "webpack",
    "watch": "webpack --watch",
    "clean": "node -e \"const { rmSync } = require('fs'); ['dist'].forEach(p => { try { rmSync(p, { recursive: true, force: true }); } catch (e) {} }); require('glob').sync('*.vsix').forEach(f => { try { rmSync(f); } catch (e) {} });\"",
    "clean-all": "node -e \"const { rmSync } = require('fs'); ['dist', 'resources/bin'].forEach(p => { try { rmSync(p, { recursive: true, force: true }); } catch (e) {} }); require('glob').sync('*.vsix').forEach(f => { try { rmSync(f); } catch (e) {} });\"",
    "build": "npm run compile && npx vsce package --no-dependencies",
    "build:clean": "npm run clean && npm run build",
    "build:clean-all": "npm run clean-all && npm run build",
    "lint": "eslint src",
    "download-sox": "node -e \"const os = require('os'); if (os.platform() === 'win32') { const { spawnSync } = require('child_process'); spawnSync('powershell', ['-ExecutionPolicy', 'Bypass', '-File', 'scripts/download-sox.ps1'], {stdio: 'inherit'}); } else if (os.platform() === 'linux') { console.log('On Linux, SoX should be installed via package manager. Run: sudo apt-get install sox'); }\""
  },
  "dependencies": {
    "openai": "^4.28.0"
  },
  "devDependencies": {
    "@types/node": "20.x",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^8.17.0",
    "@typescript-eslint/parser": "^8.17.0",
    "@vscode/vsce": "^2.24.0",
    "eslint": "^9.16.0",
    "glob": "^10.4.5",
    "ts-loader": "^9.5.1",
    "typescript": "^5.7.2",
    "webpack": "^5.95.0",
    "webpack-cli": "^5.1.4"
  }
}
